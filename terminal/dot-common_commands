# ==============================================================================
# Navigation Aliases
# ==============================================================================

alias ..='cd ..'
alias c='clear'

# ==============================================================================
# File Listing Aliases
# ==============================================================================

# Cross-platform ls with colors
if [[ "$OSTYPE" == "darwin"* ]]; then
    alias ls='ls -G'
else
    alias ls='ls --color=auto'
fi

# List variations (defined after ls is set up)
alias l='ls -lah'
alias ll='ls -alF'
alias la='ls -A'
alias lh="ls -a | grep '^\.'"

# ==============================================================================
# Text Processing Aliases
# ==============================================================================

# Cross-platform grep with colors
if command -v grep >/dev/null 2>&1; then
    alias grep='grep --color=auto'
fi

# ==============================================================================
# File Operations Aliases
# ==============================================================================

alias f='find . | grep'
alias copy='cp'

# ==============================================================================
# Network Utilities
# ==============================================================================

# Local IP address (platform-specific)
if [[ "$OSTYPE" == "darwin"* ]]; then
    alias ip="ifconfig -a | grep -A 7 '^en0' | grep inet | grep -oE '((1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])\.){3}(1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])' | head -n 1"
else
    alias ip="hostname -I | awk '{print \$1}'"
fi

# Public IP address
if command -v curl >/dev/null 2>&1; then
    alias myip="curl -s https://api.ipify.org || curl -s http://checkip.dyndns.org/ | sed 's/[a-zA-Z<>/ :]//g'"
elif command -v wget >/dev/null 2>&1; then
    alias myip="wget -qO- https://api.ipify.org"
fi

# ==============================================================================
# macOS-Specific: Homebrew Aliases
# ==============================================================================

if [[ "$OSTYPE" == "darwin"* ]] && command -v brew >/dev/null 2>&1; then
    alias brewfile='brew bundle dump --force --file=~/dotfiles/mac/Brewfile'
    alias brewinstall='brew bundle install --file=~/dotfiles/mac/Brewfile'
    alias brewcat='cat ~/dotfiles/mac/Brewfile'
fi

# ==============================================================================
# Dotfiles Management Functions
# ==============================================================================

_check_dotfiles_dir() {
  local dotfiles_dir="$HOME/dotfiles"
  [ ! -d "$dotfiles_dir" ] && {
    echo "Error: dotfiles directory not found at $dotfiles_dir"
    return 1
  }
  echo "$dotfiles_dir"
}

# Pull latest changes and restow all dotfiles
dotup() {
  local dotfiles_dir
  dotfiles_dir=$(_check_dotfiles_dir) || return 1
  cd "$dotfiles_dir" && git pull --rebase && ./symlink.sh && echo "Dotfiles updated â€“ reload shell/IDE"
}

# Restow a single dotfiles folder
dotrestow() {
  [[ -z "$1" ]] && {
    echo "Usage: dotrestow <folder>  (e.g. git, ssh, terminal, shared, linux)"
    return 1
  }
  local dotfiles_dir
  dotfiles_dir=$(_check_dotfiles_dir) || return 1
  [ ! -d "$dotfiles_dir/$1" ] && {
    echo "Error: Directory $1 not found in dotfiles"
    return 1
  }
  cd "$dotfiles_dir" && stow --dotfiles -R "$1" && echo "Restowed $1"
}

# Preview what would be restowed (dry-run)
dotpreview() {
  [[ -z "$1" ]] && {
    echo "Usage: dotpreview <folder>"
    return 1
  }
  local dotfiles_dir
  dotfiles_dir=$(_check_dotfiles_dir) || return 1
  [ ! -d "$dotfiles_dir/$1" ] && {
    echo "Error: Directory $1 not found in dotfiles"
    return 1
  }
  cd "$dotfiles_dir" && stow --dotfiles -n -R "$1"
}
